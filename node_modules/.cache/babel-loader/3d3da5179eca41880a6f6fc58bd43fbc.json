{"ast":null,"code":"import { profileReducer } from \"./profile-reducer\";\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST = \"UPDATE-NEW-POST-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\nconst store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"Hi how are you\",\n        likesCount: 11\n      }, {\n        id: 2,\n        message: \"It's my first message\",\n        likesCount: 12\n      }],\n      newPostText: \"\"\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Taras\"\n      }, {\n        id: 2,\n        name: \"Victor\"\n      }, {\n        id: 3,\n        name: \"Andrey\"\n      }, {\n        id: 4,\n        name: \"Petya\"\n      }, {\n        id: 5,\n        name: \"Vasya\"\n      }, {\n        id: 6,\n        name: \"Stepan\"\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How is your it-kamasutra'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'Yo'\n      }, {\n        id: 5,\n        message: 'Yo'\n      }, {\n        id: 6,\n        message: 'Yo'\n      }, {\n        id: 7,\n        message: 'Yo'\n      }],\n      newMessageBody: ''\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _calSubscriber(state) {},\n\n  subscriber(observer) {\n    this._calSubscriber = observer;\n  },\n\n  dispatch(action) {\n    profileReducer();\n  }\n\n};\nexport let addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const UpdateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST,\n    newText: text\n  };\n};\n_c = UpdateNewPostTextActionCreator;\nexport let sendMessageCreator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const updateNewMessageBodyCreator = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateNewPostTextActionCreator\");","map":{"version":3,"sources":["/Users/t.fedoseev/Documents/it-incubator/SocialNetwork/social-network-ts/src/redux/state.ts"],"names":["profileReducer","ADD_POST","UPDATE_NEW_POST","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","getState","_calSubscriber","state","subscriber","observer","dispatch","action","addPostActionCreator","type","UpdateNewPostTextActionCreator","text","newText","sendMessageCreator","updateNewMessageBodyCreator","body"],"mappings":"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","sourcesContent":["import {profileReducer} from \"./profile-reducer\";\n\nexport type PostsType = {\n    id: number\n    message: string\n    likesCount: number\n}\nexport type DialogType = {\n    id: number\n    name: string\n}\nexport type MessageType = {\n    id: number\n    message: string\n}\nexport type ProfilePageType = {\n    posts: Array<PostsType>\n    newPostText: string\n}\nexport type DialogsPageType = {\n    dialogs: Array<DialogType>\n    messages: Array<MessageType>\n    newMessageBody:string\n}\nexport type RootStateType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogsPageType\n}\nexport type RootStoreType = {\n    _state: RootStateType\n    getState: () => RootStateType\n    _calSubscriber: (state: RootStateType) => void\n    subscriber: (observer: (state: RootStateType) => void) => void\n    dispatch : (action: ActionsTypes) => void\n}\n\n\n\nexport type ActionsTypes = ReturnType<typeof addPostActionCreator>\n    | ReturnType<typeof UpdateNewPostTextActionCreator>\n    | ReturnType<typeof sendMessageCreator>\n    | ReturnType<typeof updateNewMessageBodyCreator>\n\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST = \"UPDATE-NEW-POST-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\"\nconst  SEND_MESSAGE= \"SEND-MESSAGE\"\n\nconst store: RootStoreType = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: 1, message: \"Hi how are you\", likesCount: 11},\n                {id: 2, message: \"It's my first message\", likesCount: 12},\n            ],\n            newPostText: \"\"\n        },\n        dialogsPage: {\n            dialogs: [\n                {id: 1, name: \"Taras\"},\n                {id: 2, name: \"Victor\"},\n                {id: 3, name: \"Andrey\"},\n                {id: 4, name: \"Petya\"},\n                {id: 5, name: \"Vasya\"},\n                {id: 6, name: \"Stepan\"},\n            ],\n            messages: [\n                {id: 1, message: 'Hi'},\n                {id: 2, message: 'How is your it-kamasutra'},\n                {id: 3, message: 'Yo'},\n                {id: 4, message: 'Yo'},\n                {id: 5, message: 'Yo'},\n                {id: 6, message: 'Yo'},\n                {id: 7, message: 'Yo'},\n            ],\n            newMessageBody: ''\n        }\n    },\n    getState() {\n        return this._state\n    },\n    _calSubscriber(state) {\n\n    },\n    subscriber(observer) {\n        this._calSubscriber = observer\n    },\n    dispatch (action) {\n        profileReducer()\n    }\n}\n\nexport let addPostActionCreator = ()=> {\n    return {\n        type: ADD_POST\n    } as const\n}\nexport const UpdateNewPostTextActionCreator = (text:string)=> {\n    return {\n        type : UPDATE_NEW_POST, newText : text\n    } as const\n}\n\nexport let sendMessageCreator = ()=> {\n    return {\n        type: SEND_MESSAGE\n    } as const\n}\nexport const updateNewMessageBodyCreator = (body:string)=> {\n    return {\n        type : UPDATE_NEW_MESSAGE_BODY, body : body\n    } as const\n}\n\n\n\nexport default store"]},"metadata":{},"sourceType":"module"}